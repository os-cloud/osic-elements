#!/bin/bash
# Copyright 2016, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# (c) 2016, Kevin Carter <kevin.carter@rackspace.com>

if [ ${DIB_DEBUG_TRACE:-0} -gt 0 ]; then
    set -x
else
    set -v
fi

set -eu
set -o pipefail

if [ ${OSIC_DEBUG:-0} -gt 0 ]; then
  ### USED FOR TO ALLOW CONSOLE DEBUG. Remove this line in prod
  echo -e "secrete\nsecrete\n" | passwd root
  ### USED FOR TO ALLOW CONSOLE DEBUG. Remove this line in prod
fi

source /etc/os-release 2>/dev/null
export DISTRO_ID="${ID}"
export DISTRO_NAME="${NAME}"
export DISTRO_VERSION_ID="${VERSION_ID}"

function debian_deploy {
  # Package update and install
  apt-get update
  DEBIAN_FRONTEND="noninteractive" apt-get -y install bridge-utils vlan ifenslave

  # Remove the cloud init network interface file if found.
  if [ -f "/etc/network/interfaces.d/50-cloud-init.cfg" ];then
    rm /etc/network/interfaces.d/50-cloud-init.cfg 
  fi

  if ! grep -qw "^bonding" /etc/modules; then
    echo "bonding" >> /etc/modules
  fi

  # Identify the bond slaves
  export SLAVEONE="${SLAVEONE:-p1p1}"
  export SLAVETWO="${SLAVETWO:-p4p1}"

  cat >/etc/network/interfaces <<EOF
# Loop back
auto lo
iface lo inet loopback

# Bond slave1
auto ${SLAVEONE}
iface ${SLAVEONE} inet manual
    bond-master bond0
    bond-primary ${SLAVEONE}

# Bond slave2
auto ${SLAVETWO}
iface ${SLAVETWO} inet manual
    bond-master bond0

# Bond
auto bond0
iface bond0 inet dhcp
    bond-slaves none
    bond-mode active-backup
    bond-miimon 100
    bond-downdelay 200
    bond-updelay 200
EOF

}

function deploy_centos {
  yum -y install bridge-utils

  # Ensure the i40e drivers are loaded
  echo -e '# Load i40e drivers\ni40e' > /etc/modules-load.d/i40e.conf

  # Ensure bonding is loaded
  echo -e '# Load bonding drivers\nbonding' > /etc/modules-load.d/bonding.conf

  # Identify the bond slaves
  export SLAVEONE="${SLAVEONE:-ens1f0}"
  export SLAVETWO="${SLAVETWO:-ens4f0}"

  cat > /etc/sysconfig/network-scripts/ifcfg-${SLAVEONE} <<EOF
DEVICE="${SLAVEONE}"
DEFROUTE="yes"
PEERDNS="yes"
PEERROUTES="yes"
BOOTPROTO="none"
ONBOOT="yes"
MASTER="bond0"
SLAVE="yes"
TYPE="Ethernet"
USERCTL="yes"
IPV6INIT="no"
EOF
  cat > /etc/sysconfig/network-scripts/ifcfg-${SLAVETWO} <<EOF
DEVICE="${SLAVETWO}"
DEFROUTE="yes"
PEERDNS="yes"
PEERROUTES="yes"
BOOTPROTO="none"
ONBOOT="yes"
MASTER="bond0"
SLAVE="yes"
TYPE="Ethernet"
USERCTL="yes"
IPV6INIT="no"
EOF
  cat > /etc/sysconfig/network-scripts/ifcfg-bond0 <<EOF
DEVICE="bond0"
BOOTPROTO="dhcp"
NAME="bond0"
TYPE="Bond"
BONDING_MASTER=yes
ONBOOT="yes"
BOOTPROTO="dhcp"
BONDING_OPTS="mode=4 lacp_rate=1 xmit_hash_policy=layer3+4 miimon=100"
IPV4_FAILURE_FATAL="no"
IPV6INIT="yes"
IPV6_AUTOCONF="yes"
IPV6_DEFROUTE="yes"
IPV6_PEERDNS="yes"
IPV6_PEERROUTES="yes"
IPV6_FAILURE_FATAL="no"
EOF

}

case ${DISTRO_ID} in
  centos|rhel)
    deploy_centos
    ;;
  ubuntu|debian)
    debian_deploy
    ;;
esac

